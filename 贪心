#分配问题：
#LeetCode  455

g.sort()
s.sort()
gi=si=0
while gi<len(g) and si < len(s):
  if s[si] >= g[gi]:
    gi += 1
  si += 1
return gi

#LeetCode  135
left = [1 for _ in range(len(ratings))]
right = left[:]
for i in range(1,len(ratings)):
  if ratings[i]> ratings[i-1]:
    left[i] = left[i-1]+1
  count = left[-1]
for i in range(len(ratings)-2,-1,-1):
  if ratings[i]>ratings[i+1]:
    right[i] = right[i+1]+1
  count += max(right[i],left[i])
return count

#区间分配
#leetcode 435
if not intervals:
            return 0
        
intervals = sorted(intervals, key=lambda x:x[1])

ans = 0
end = -float('inf')  # 结束时间
for i in intervals:
  if i[0] >= end:
    ans += 1
    end = i[1]
return len(interval) - ans

